let APP_PORT,DB_URL,routes,errorHandler,mongoose,path,cors;_cf0‍.w("./config",[["APP_PORT",["APP_PORT"],function(v){APP_PORT=v}],["DB_URL",["DB_URL"],function(v){DB_URL=v}]]);_cf0‍.w("./routes",[["default",["routes"],function(v){routes=v}]]);_cf0‍.w("./middlewares/errorHandler",[["default",["errorHandler"],function(v){errorHandler=v}]]);_cf0‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_cf0‍.w("path",[["default",["path"],function(v){path=v}]]);_cf0‍.w("cors",[["default",["cors"],function(v){cors=v}]]);const express = require('express')
const app = express()








  



// Database connection
mongoose.connect(DB_URL, {
    useNewUrlParser: true,
    // useFindAndModify: false,
    useUnifiedTopology: true
});
const db = mongoose.connection;
db.on('error', _cf0‍.g.console.error.bind(_cf0‍.g.console, 'connection error:'));
db.once('open', () => {
    console.log('DB connected...');
});


global.appRoot = path.resolve(__dirname);
app.use(cors());
app.use(express.urlencoded({extended:false}))   // use to handle multipart data




app.use(express.json());         //use for enable json data  
app.use('/api', routes);
app.use('/uploads',express.static('uploads'))



app.use(errorHandler);
app.listen(APP_PORT, () => {
    console.log(` app listening on port ${APP_PORT}`)
})
