let registerController,loginController,userController,refreshController,productController,auth,admin;_f4d‍.x([["default",()=>_f4d‍.o]]);_f4d‍.w("../controllers",[["registerController",["registerController"],function(v){registerController=v}],["loginController",["loginController"],function(v){loginController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);_f4d‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_f4d‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);const express = require('express');
const router = express.Router();







// router.get('/', (req, res) => {
//     res.send('Hello World!')
//   })

router.post('/register', registerController.register)
router.post('/login', loginController.login)
router.get('/me', auth, userController.me);
router.post('/refresh', refreshController.refresh);
router.post('/logout', auth, loginController.logout);


router.post('/products',[auth ,admin],productController.store);
router.put('/products/:id',[auth,admin],productController.update);
router.delete('/products/:id',[auth,admin],productController.destroy);

// router.get('/products',[auth,admin],productController.index);
router.get('/products',productController.index);
router.get('/products/:id',productController.show);

_f4d‍.d(router);